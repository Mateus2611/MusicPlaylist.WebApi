// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicPlaylist.WebApi.Repositories.EntityFramework;

#nullable disable

namespace MusicPlaylist.WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241116163708_UpdateDatabase")]
    partial class UpdateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusicPlaylist.WebApi.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bio");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("artist", (string)null);
                });

            modelBuilder.Entity("MusicPlaylist.WebApi.Models.Music", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<DateTime>("Release")
                        .HasColumnType("datetime2")
                        .HasColumnName("release");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("music", (string)null);
                });

            modelBuilder.Entity("MusicPlaylist.WebApi.Models.MusicsPlaylists", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnType("int")
                        .HasColumnName("PlaylistsId");

                    b.Property<int>("MusicId")
                        .HasColumnType("int")
                        .HasColumnName("MusicsId");

                    b.HasKey("PlaylistId", "MusicId");

                    b.HasIndex("MusicId");

                    b.ToTable("music_playlist", (string)null);
                });

            modelBuilder.Entity("MusicPlaylist.WebApi.Models.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("playlist", (string)null);
                });

            modelBuilder.Entity("MusicPlaylist.WebApi.Models.Music", b =>
                {
                    b.HasOne("MusicPlaylist.WebApi.Models.Artist", "Artists")
                        .WithMany("Musics")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artists");
                });

            modelBuilder.Entity("MusicPlaylist.WebApi.Models.MusicsPlaylists", b =>
                {
                    b.HasOne("MusicPlaylist.WebApi.Models.Music", "Musics")
                        .WithMany("MusicPlaylists")
                        .HasForeignKey("MusicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicPlaylist.WebApi.Models.Playlist", "Playlists")
                        .WithMany("MusicPlaylists")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musics");

                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("MusicPlaylist.WebApi.Models.Artist", b =>
                {
                    b.Navigation("Musics");
                });

            modelBuilder.Entity("MusicPlaylist.WebApi.Models.Music", b =>
                {
                    b.Navigation("MusicPlaylists");
                });

            modelBuilder.Entity("MusicPlaylist.WebApi.Models.Playlist", b =>
                {
                    b.Navigation("MusicPlaylists");
                });
#pragma warning restore 612, 618
        }
    }
}
